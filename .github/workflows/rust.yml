name: Rust

on:
  push: {}
  pull_request: {}

jobs:
  build_test:
    runs-on: windows-latest
    strategy:
      matrix:
        rust:
        # x86 without sse/sse2 on by default
        - { target: i586-pc-windows-msvc, toolchain: 1.43.0 }
        - { target: i586-pc-windows-msvc, toolchain: stable }
        - { target: i586-pc-windows-msvc, toolchain: beta }
        - { target: i586-pc-windows-msvc, toolchain: nightly }
        # x86
        - { target: i686-pc-windows-msvc, toolchain: 1.43.0 }
        - { target: i686-pc-windows-msvc, toolchain: stable }
        - { target: i686-pc-windows-msvc, toolchain: beta }
        - { target: i686-pc-windows-msvc, toolchain: nightly }
        # x86_64
        - { target: x86_64-pc-windows-msvc, toolchain: 1.43.0 }
        - { target: x86_64-pc-windows-msvc, toolchain: stable }
        - { target: x86_64-pc-windows-msvc, toolchain: beta }
        - { target: x86_64-pc-windows-msvc, toolchain: nightly }
        ## arm
        #- { target: arm-unknown-linux-gnueabihf, toolchain: 1.43.0 }
        #- { target: arm-unknown-linux-gnueabihf, toolchain: stable }
        #- { target: arm-unknown-linux-gnueabihf, toolchain: beta }
        #- { target: arm-unknown-linux-gnueabihf, toolchain: nightly }
        ## aarch64
        #- { target: aarch64-unknown-linux-gnu, toolchain: 1.43.0 }
        #- { target: aarch64-unknown-linux-gnu, toolchain: stable }
        #- { target: aarch64-unknown-linux-gnu, toolchain: beta }
        #- { target: aarch64-unknown-linux-gnu, toolchain: nightly }
        ## wasm32
        #- { target: wasm32-unknown-unknown, toolchain: 1.43.0 }
        #- { target: wasm32-unknown-unknown, toolchain: stable }
        #- { target: wasm32-unknown-unknown, toolchain: beta }
        #- { target: wasm32-unknown-unknown, toolchain: nightly }
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust.toolchain }}
        target:  ${{ matrix.rust.target }}
        profile: minimal
        default: true
    - name: Build the crate
      run: cargo build --target ${{ matrix.rust.target }}
    - name: Test with default CPU features.
      if: matrix.rust.target == 'i586-pc-windows-msvc' || matrix.rust.target == 'i686-pc-windows-msvc' || matrix.rust.target == 'x86_64-pc-windows-msvc'
      run: cargo test --target ${{ matrix.rust.target }}
    - name: Test with default CPU features + All Cargo Features
      if: matrix.rust.target == 'i586-pc-windows-msvc' || matrix.rust.target == 'i686-pc-windows-msvc' || matrix.rust.target == 'x86_64-pc-windows-msvc'
      run: cargo test --target ${{ matrix.rust.target }} --all-features
    - name: switch over to native cpu features
      run: mv .cargo-ci .cargo
    - name: Test with 'native' CPU features.
      if: matrix.rust.target == 'i586-pc-windows-msvc' || matrix.rust.target == 'i686-pc-windows-msvc' || matrix.rust.target == 'x86_64-pc-windows-msvc'
      run: cargo test --target ${{ matrix.rust.target }}
    - name: Test with 'native' CPU features + All Cargo Features
      if: matrix.rust.target == 'i586-pc-windows-msvc' || matrix.rust.target == 'i686-pc-windows-msvc' || matrix.rust.target == 'x86_64-pc-windows-msvc'
      run: cargo test --target ${{ matrix.rust.target }} --all-features
