name: Rust

on: [push]

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
        # x86 without SIMD enabled
        - { target: i586-unknown-linux-gnu, toolchain: 1.43.0 }
        - { target: i586-unknown-linux-gnu, toolchain: stable }
        - { target: i586-unknown-linux-gnu, toolchain: beta }
        - { target: i586-unknown-linux-gnu, toolchain: nightly }
        # x86
        - { target: i686-unknown-linux-gnu, toolchain: 1.43.0 }
        - { target: i686-unknown-linux-gnu, toolchain: stable }
        - { target: i686-unknown-linux-gnu, toolchain: beta }
        - { target: i686-unknown-linux-gnu, toolchain: nightly }
        # x86_64
        - { target: x86_64-unknown-linux-gnu, toolchain: 1.43.0 }
        - { target: x86_64-unknown-linux-gnu, toolchain: stable }
        - { target: x86_64-unknown-linux-gnu, toolchain: beta }
        - { target: x86_64-unknown-linux-gnu, toolchain: nightly }
        # arm
        - { target: arm-unknown-linux-gnueabihf, toolchain: 1.43.0 }
        - { target: arm-unknown-linux-gnueabihf, toolchain: stable }
        - { target: arm-unknown-linux-gnueabihf, toolchain: beta }
        - { target: arm-unknown-linux-gnueabihf, toolchain: nightly }
        # aarch64
        - { target: aarch64-unknown-linux-gnu, toolchain: 1.43.0 }
        - { target: aarch64-unknown-linux-gnu, toolchain: stable }
        - { target: aarch64-unknown-linux-gnu, toolchain: beta }
        - { target: aarch64-unknown-linux-gnu, toolchain: nightly }
        # wasm32
        - { target: wasm32-unknown-unknown, toolchain: 1.43.0 }
        - { target: wasm32-unknown-unknown, toolchain: stable }
        - { target: wasm32-unknown-unknown, toolchain: beta }
        - { target: wasm32-unknown-unknown, toolchain: nightly }
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust.toolchain }}
        target:  ${{ matrix.rust.target }}
        profile: minimal
        default: true
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        toolchain: ${{ matrix.rust.toolchain }}
        command: build
    - name: Test with default CPU features.
      if: matrix.rust.target == 'i586-unknown-linux-gnu' || matrix.rust.target == 'i686-unknown-linux-gnu' || matrix.rust.target == 'x86_64-unknown-linux-gnu'
      run: cargo test
    - name: Test with 'native' CPU features.
      if: matrix.rust.target == 'i586-unknown-linux-gnu' || matrix.rust.target == 'i686-unknown-linux-gnu' || matrix.rust.target == 'x86_64-unknown-linux-gnu'
      run: RUSTARGS=-Ctarget-cpu=native cargo test
